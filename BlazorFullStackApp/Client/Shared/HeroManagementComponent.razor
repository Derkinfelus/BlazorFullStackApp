@inject ISuperHeroService SuperHeroService
@inject IJSRuntime JSRuntime


@if (hero.Id == -1)
{
    <h3>Create hero</h3>
}
else
{
    <h3>Edit hero</h3>
}

<EditForm Model="hero" OnSubmit="OnEditFormSubmit">
    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="hero.FirstName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Last Name</label>
        <InputText @bind-Value="hero.LastName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>First Name</label>
        <InputText @bind-Value="hero.HeroName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label>Comic</label>
        <InputRadioGroup @bind-Value="hero.ComicId" class="form-control">
            @foreach (var i in SuperHeroService.Comics)
            {
                <InputRadio Value="i.Id"></InputRadio><span style="padding-left: 5px;">@i.Data</span>
            }
        </InputRadioGroup>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>


@code {
    [Parameter]
    public SuperHero hero { get; set; } = new SuperHero();

    protected override async Task OnInitializedAsync()
    {
        await SuperHeroService.GetHeroes();
    }

    async void OnEditFormSubmit()
    {
        if (hero.Id == -1)
        {
            hero.Id = SuperHeroService.Heroes.Max(x => x.Id) + 1;
            await SuperHeroService.PostSuperHero(hero);
        }
        else
            await SuperHeroService.PutSuperHero(hero, hero.Id);

        hero.Id = -1;
        SuperHeroService.Shit();
    }
}
