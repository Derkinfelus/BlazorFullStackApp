@page "/MultiDimensionalList"
@inject IMultiDimensionalListService MultiDimensionalListService
@implements IDisposable


@if (MultiDimensionalListService.HightestDimensionElement == null)
{
    <h2>Elelments Are Loading</h2>
}
else
{
    <EditForm Model="elemToEdit">
        <InputRadioGroup @bind-Value="elemToEdit.ParrentId">
            <RecoursiveRenderMultiDimensionalListComponent lst="MultiDimensionalListService.HightestDimensionElement"></RecoursiveRenderMultiDimensionalListComponent>
        </InputRadioGroup>
    </EditForm>
    @MultiDimensionalListService.HightestDimensionElement.LowerDimensionList[0].LowerDimensionList[0].ParrentId
}


<MultiDimensionalListManagementComponent elemToEdit="elemToEdit"></MultiDimensionalListManagementComponent>
@elemToEdit.Id
@elemToEdit.Name 
@elemToEdit.ParrentId


@code {
    public OpenableMultiDimensionalList elemToEdit = new OpenableMultiDimensionalList
    {
        Id = -1,
        Name = "nothing",
        Data = 0,
        IsOpen = false,
        ParrentId = 0,
        LowerDimensionList = new List<OpenableMultiDimensionalList>()
    };
    public int elemToEditId;

    protected override async Task OnInitializedAsync()
    {
        MultiDimensionalListService.OnChange += StateHasChanged;
        if (MultiDimensionalListService.HightestDimensionElement == null)
            await MultiDimensionalListService.GetHightestDimensionElement();
    }


    public void Dispose()
    {
        MultiDimensionalListService.OnChange -= StateHasChanged;
    }
}
