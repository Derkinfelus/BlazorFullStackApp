@page "/multidimentionallist"
@inject IMultiDimentionalListService MultiDimentionalListService
@implements IDisposable
@using Microsoft.AspNetCore.Components.Rendering


<h3>TwoDimentionalListComponent</h3>


@if (MultiDimentionalListService.ListOfElements.Count > 0)
{
    RecoursiveListRender(__builder, MultiDimentionalListService.ListOfElements);
}



@code {
    ElementTransporter transporter = new ElementTransporter { Element = new ListElement() };

    protected override async Task OnInitializedAsync()
    {
        MultiDimentionalListService.OnChange += StateHasChanged;
        if (MultiDimentionalListService.ListOfElements.Count == 0)
            await MultiDimentionalListService.GetList();
        MultiDimentionalListService.ListOfElements[0].IsOpen = true;
    }


    void RecoursiveListRender(RenderTreeBuilder __builder, List<OpenableMultiDimentionalList> lowerDimentionList)
    {
        <ul>
            @foreach (var i in lowerDimentionList)
            {
                <li>
                    <span>
                        @if (i.LowerDimentionList.Count != 0)
                        {
                            <button @onclick="(() => i.IsOpen = !i.IsOpen)" class="btn btn-primary">@ListStatus(i.IsOpen)</button>
                            <label>@i.Name</label>
                        }
                        else
                        {
                            <label>@i.Name: @i.Data</label>
                        }
                    </span>
                    @if (i.IsOpen)
                    {
                        RecoursiveListRender(__builder, i.LowerDimentionList);
                    }
                </li>
            }
        </ul>
    }


    public string ListStatus(bool isOpen)
    {
        if (isOpen)
            return "Hide";
        else
            return "Show";
    }


    public void Dispose()
    {
        MultiDimentionalListService.OnChange -= StateHasChanged;
    }
}
